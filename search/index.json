[{"content":"Hugo Build Todo 修改主题 明确分类 寻找背景图片 绑定域名 更换头像 修改字体 修改about 并切换menu未知 了解画廊! https://gallery.linsnow.cn/ 了解文章图片使用方式 修改Menu成中文 评论功能添加 ","date":"2024-02-28T23:39:43+08:00","permalink":"/hiwikhome/hugotodo/","title":"Hugo-TODO"},{"content":"Hugo文章创建 在Hugo中创建文章时，你可以在文章的前言（Front Matter）中定义多种属性，以控制文章的各种设置和行为。Front Matter是位于Markdown文件顶部的区域，用于存储元数据，如标题、日期、描述等。Hugo支持YAML、TOML和JSON格式的Front Matter。下面是一些常见属性及其说明：\n基本属性 title: 文章的标题。 date: 文章的发布日期，通常用于控制文章的排序。 draft: 布尔值，指示文章是否是草稿。如果为true，则文章在构建生产版本的站点时不会被发布。 author: 文章的作者名字。 description: 文章的简短描述，有时用于搜索引擎优化（SEO）。 分类和标签 categories: 一个列表，用于指定文章所属的分类。 tags: 一个列表，用于指定文章的标签。 URL和永久链接 slug: 文章的短链接，用于自定义文章的URL。 url: 可以完全自定义文章的URL。 高级设置 weight: 用于手动控制文章在列表中的排序。 aliases: 一个列表，用于为文章指定额外的路径，常用于重定向旧URL到新位置。 series: 用于将文章分组为系列。 图片和资源 images: 一个列表，指定文章的特色图像或相关图像。 resources: 用于管理文章附件和资源，如图片、PDF文件等。 Hugo命令 Hugo是一个快速的静态网站生成器，提供了一系列命令来帮助你创建和管理你的网站。对于本地开发，特别是想避免频繁重新编译的场景，Hugo提供了实时重载功能，可以在你进行更改时自动重新生成网站，而无需手动重新编译。以下是一些Hugo的常用命令以及如何利用Hugo的实时重载功能。\nHugo常用命令 hugo：在默认情况下，运行hugo命令会生成整个网站。生成的文件会放在public目录下。 hugo server：启动一个带有实时重载功能的本地服务器。当你修改项目文件时，Hugo会自动检测这些更改并立即重新生成静态文件，同时刷新浏览器，让你实时看到更改效果。 hugo new site [SITE_NAME]：创建一个新的Hugo网站。这会在指定的[SITE_NAME]目录下创建一个新的Hugo项目结构。 hugo new [PATH]：基于你的主题中定义的架构，创建一个新的内容文件。例如，hugo new posts/my-first-post.md会创建一个新的文章。 hugo check：运行一系列检查，以确保网站配置没有问题。 hugo version：显示当前安装的Hugo版本! 利用Hugo的实时重载功能 运行hugo server命令是开发Hugo网站时避免频繁重新编译的最佳实践。这个命令不仅启动了一个本地服务器，还开启了文件更改监听器，自动重新生成网站并推送更新到浏览器。\n1 2 bashCopy code hugo server 或者，如果你想让服务器对外部设备可见，可以使用--bind参数指定监听的地址，并使用--baseURL参数（如果需要的话）：\n1 2 bashCopy code hugo server --bind=\u0026#34;0.0.0.0\u0026#34; --baseURL=\u0026#34;http://example.com\u0026#34; 这样，你就可以通过其他设备在同一网络中访问你的本地服务器了。\n其他有用的参数 --buildDrafts或-D：包括草稿内容在内的服务器运行。 --buildFuture：允许显示将来日期的内容。 --disableFastRender：禁用快速渲染模式，每次更改都会完全重建站点，适用于调试。 清除public 这个命令在构建网站之前会自动清理public目录。这意味着所有旧文件都会被删除，只有新生成的文件会被放置在public文件夹中。使用这个命令可以确保public目录保持最新状态\nhugo --cleanDestinationDir 通过这些命令和参数的使用，你可以高效地管理Hugo项目，并享受快速反馈的开发体验。\nHugo Content content 里要用 index.md ,这样放在对应文件夹下的img才能被正常使用 1 2 3 4 5 public class HelloWorld { public static void main(String[] args) { System.out.println(\u0026#34;Hello, World!\u0026#34;); } } ","date":"2024-02-27T21:54:28+08:00","image":"/hiwikhome/hugoguide/jinx_hu3090642d58724b2e78b798824c14a165_862217_120x120_fill_box_smart1_3.png","permalink":"/hiwikhome/hugoguide/","title":"Hugo使用指南"}]